
# ToDo List for CPF Website

## Links & Redirects
- Replace all Discord invite links with the actual CPF Discord server URL
- Replace all GitHub organization links with the actual CPF GitHub organization URL
- Update all email addresses with the correct CPF email domain
- Configure form submission endpoints for contact and newsletter forms
  - Contact form endpoint in src/components/contact/ContactForm.tsx (LINE 31-40)
  - Newsletter subscription endpoint in src/components/layout/Footer/NewsletterSubscribe.tsx (LINE 28-37) 
  - Resource upload endpoint needed in src/components/resources/ResourceUploadModal.tsx

## Content
- Replace placeholder blog posts with actual content
- Replace placeholder project information with actual CPF projects
- Replace placeholder event information with actual CPF events
- Add actual team member information and photos in About page
- Replace placeholder timeline images with actual historical photos

## Assets
- Replace the current text-based logo with the uploaded CPF logo image
- Add favicon using the CPF logo
- Add actual member photos for the team section
- Add actual project screenshots or images
- Add actual event photos

## Configuration
- Set up proper meta tags for SEO
- Configure analytics tracking (Google Analytics or similar)
- Set up proper caching policy for static assets

## Development
- Implement PayloadCMS integration for content management
  - Create API endpoints for blog posts
  - Create API endpoints for events
  - Create API endpoints for projects
  - Create API endpoints for resources
  - Set up media uploads integration
- Set up proper authentication for admin users
- Create an admin dashboard for content management
- Implement proper form validation and submission handling
- Set up email notification system for form submissions
- Implement file upload functionality for resources section

## Deployment
- Set up proper hosting environment
- Configure domain name and DNS settings
- Set up SSL certificate
- Configure CI/CD pipeline for automated deployment
- Implement proper backup strategy

## Performance & Accessibility
- Optimize image loading and compression
- Implement lazy loading for images and components
- Ensure proper accessibility (ARIA labels, keyboard navigation, etc.)
- Test and optimize for different screen sizes and devices
- Implement proper error handling and fallbacks

## PayloadCMS Integration
- Study the PayloadCMS documentation at https://payloadcms.com/docs
- Set up a PayloadCMS instance for the website
- Design collection schemas for blog posts, events, projects, and resources
- Create API endpoints to fetch content from PayloadCMS
- Implement authentication with PayloadCMS
- Connect the front-end components to PayloadCMS API
- Set up media uploads through PayloadCMS
